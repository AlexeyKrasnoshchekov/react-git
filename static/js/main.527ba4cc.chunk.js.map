{"version":3,"sources":["components/Form.js","components/Todo.js","components/toDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","onSubmit","e","preventDefault","todos","inputText","setTodos","text","completed","id","Math","floor","random","setInputText","value","type","onChange","target","className","setStatus","name","Todo","todo","onClick","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setfilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.527ba4cc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Form = (props) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        props.setInputText(e.target.value);\r\n    };\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        let todos = props.todos;\r\n        let inputText = props.inputText;\r\n        if (inputText) {\r\n          props.setTodos([\r\n            ...todos, {text: props.inputText, completed: false, id: Math.floor(Math.random() * 1000) }\r\n        ])\r\n      }\r\n        props.setInputText('');\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n        props.setStatus(e.target.value);\r\n    };\r\n\r\n  return (\r\n    <form onSubmit={submitTodoHandler}>\r\n      <input value={props.inputText} type=\"text\" onChange={inputTextHandler}  className=\"todo-input\" />\r\n      <button   className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo = ({ text, todos, todo, setTodos }) => {\r\n  //events\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n\r\n  const completeHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo.js\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n\r\n\r\n  // console.log('filteredTodos', filteredTodos);\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        \r\n          {filteredTodos.map(todo => (\r\n              <Todo \r\n                text={todo.text} \r\n                key={todo.id} \r\n                todos={todos} \r\n                todo={todo} \r\n                setTodos={setTodos}\r\n              />\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"./components/Form.js\";\nimport TodoList from \"./components/toDoList.js\";\n\nfunction App() {\n  //state\n\n  //поле ввода и его сохранение в стейт\n  const [inputText, setInputText] = useState(\"\");\n  //список дел и его сохранение в стейт\n  const [todos, setTodos] = useState([]);\n  //статус дел и его сохранение в стейт\n  const [status, setStatus] = useState(\"all\");\n  //дела после фильтра\n  const [filteredTodos, setfilteredTodos] = useState([]);\n\n \n  \n\n  //functions\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setfilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setfilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n\n      default:\n        setfilteredTodos(todos);\n        break;\n    }\n  };\n\n  // localStorage functions\n  //save to Local\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  // get from Local\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n   //useEffect\n  //run once when start, берет дела из localStorage\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n// запуск функций после каждого изменения массива todos или статуса\n  useEffect(() => {\n    filterHandler();  // запуск фильтра\n    saveLocalTodos(); // сохранение в localStorage\n  }, [todos, status]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>To do list </h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        status={status}\n        setStatus={setStatus}\n      />\n\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}